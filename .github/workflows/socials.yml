name: Socialslaw
on:
  # schedule:
  #   - cron: "*/15 * * * *"
  push:
    branches:
      - main

jobs:
  actionslaw:
    runs-on: ubuntu-latest
    outputs:
      items: ${{ steps.trigger.outputs.items }}
    steps:
      - uses: actionslaw/actionslaw-action@v1.2.8
        id: trigger
        with:
          on: '
            {
              "activitypub": {
                "user": "username",
                "host": "example.com",
                "removeTrailingHashtags": "true"
              }
            }'

  print:
    needs: actionslaw
    if: ${{needs.actionslaw.outputs.items != '[]' && needs.actionslaw.outputs.items != ''}}
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        items: ${{fromJSON(needs.actionslaw.outputs.items)}}
    name: Print
    runs-on: ubuntu-latest
    steps:
      - name: Print Outputs
        env:
          items: ${{needs.actionslaw.outputs.items}}
          uri: ${{matrix.items.uri}}
          message: ${{matrix.items.message}}
          replyTo: ${{matrix.items.replyTo}}
        run: |
          echo items: $items
          echo uri: $uri
          echo message: $message
          echo replyTo: $replyTo

  # twitter:
  #   needs: actionslaw
  #   if: ${{needs.actionslaw.outputs.items != '[]' && needs.actionslaw.outputs.items != ''}}
  #   strategy:
  #     fail-fast: true
  #     max-parallel: 1
  #     matrix:
  #       items: ${{fromJSON(needs.actionslaw.outputs.items)}}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/cache/restore@v3
  #       with:
  #         path: ./tweets.txt
  #         key: ${{ matrix.items.replyto }}

  #     - uses: actions/cache/restore@v3
  #       if: ${{matrix.items.media != ''}}
  #       with:
  #         path: ./media/**
  #         key: ${{ matrix.items.uri }}

  #     - id: read-history
  #       run: |
  #         if test -f ./tweets.txt; then
  #           cat ./tweets.txt  >> $GITHUB_OUTPUT
  #         fi

  #     - uses: rg-wood/send-tweet-action@v1.1.3
  #       id: send
  #       with:
  #         status: ${{ matrix.items.message }}
  #         replyto: ${{ steps.read-history.outputs.status }}
  #         media: ./media
  #         consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
  #         consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
  #         access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
  #         access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

  #     - id: write-history
  #       run: echo 'status=${{ steps.send.outputs.status }}' >> ./tweets.txt

  #     - uses: actions/cache/save@v3
  #       with:
  #         path: ./tweets.txt
  #         key: ${{ matrix.items.uri }}

  # bluesky:
  #   needs: actionslaw
  #   if: ${{needs.actionslaw.outputs.items != '[]' && needs.actionslaw.outputs.items != ''}}
  #   strategy:
  #     fail-fast: true
  #     max-parallel: 1
  #     matrix:
  #       items: ${{fromJSON(needs.actionslaw.outputs.items)}}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/cache/restore@v3
  #       with:
  #         path: ./atposts.txt
  #         key: ${{ matrix.items.replyto }}

  #     - uses: actions/cache/restore@v3
  #       if: ${{matrix.items.media != ''}}
  #       with:
  #         path: ./media/**
  #         key: ${{ matrix.items.uri }}

  #     - id: read-history
  #       run: |
  #         if test -f ./atposts.txt; then
  #           cat ./atposts.txt  >> $GITHUB_OUTPUT
  #         fi

  #     - uses: rg-wood/bluesky-post-action@v1.1.8
  #       id: post
  #       with:
  #         text: ${{ matrix.items.message }}
  #         replyto: ${{ steps.read-history.outputs.reference }}
  #         media: ./media
  #         service: https://bsky.social
  #         identifier: ric@grislyeye.com
  #         password: ${{ secrets.BLUESKY_PASSWORD }}

  #     - id: write-history
  #       run: echo 'reference=${{ steps.post.outputs.reference }}' >> ./atposts.txt

  #     - uses: actions/cache/save@v3
  #       with:
  #         path: ./atposts.txt
  #         key: ${{ matrix.items.uri }}
